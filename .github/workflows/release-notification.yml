name: send slack message versions

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  github-releases-to-discord:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Fetch Latest Release
        id: latest_release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          RAW_RELEASE=$(gh release list --repo $GITHUB_REPOSITORY --limit 1 --json tagName --jq '.[0].tagName')
          echo "Raw release: $RAW_RELEASE"
          echo "::set-output name=tag::$RAW_RELEASE"

      - name: Notify Slack of New Release
        uses: rtCamp/action-slack-notify@v2
        if: '!github.event.release.prerelease'
        env:
          SLACK_CHANNEL: "lerian-product-release" # Channel of Slack
          SLACK_COLOR: "#36a64f"
          SLACK_ICON: ":rocket:"
          SLACK_MSG_AUTHOR: "Lerian-Release-Product-Notification"
          SLACK_USERNAME: "Lerian-Release-Product-Notification"
          SLACK_MESSAGE: "ðŸŽ‰ *Nova Release Publicada!* VersÃ£o: ${{ steps.latest_release.outputs.tag }} \n \n <https://github.com/${{ github.repository }}/releases/tag/${{ steps.latest_release.outputs.tag }} |Clique aqui para detalhes.>"
          SLACK_TITLE: "Midaz New Release: ${{ steps.latest_release.outputs.tag }}"
          SLACK_WEBHOOK: ${{ secrets.RELEASE_WEBHOOK_NOTIFICATION_URL }} # Webhook Release Notification